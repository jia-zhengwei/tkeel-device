{
  "swagger": "2.0",
  "info": {
    "title": "api/openapi/v1/server.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Openapi"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/addons/identify": {
      "post": {
        "summary": "Post addons identify.",
        "operationId": "Openapi_AddonsIdentify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddonsIdentifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddonsIdentifyRequest"
            }
          }
        ],
        "tags": [
          "Openapi"
        ]
      }
    },
    "/identify": {
      "get": {
        "summary": "Query identify.",
        "operationId": "Openapi_Identify",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdentifyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Openapi"
        ]
      }
    },
    "/status": {
      "get": {
        "summary": "Query status.",
        "operationId": "Openapi_tatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Openapi"
        ]
      }
    },
    "/tenant/bind": {
      "post": {
        "summary": "Post tenant bind.",
        "operationId": "Openapi_TenantBind",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TenantBindResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TenantBindRequst"
            }
          }
        ],
        "tags": [
          "Openapi"
        ]
      }
    },
    "/tenant/unbind": {
      "post": {
        "summary": "Post tenant bind.",
        "operationId": "Openapi_TenantUnbind",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TenantUnbindResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TenantUnbindRequst"
            }
          }
        ],
        "tags": [
          "Openapi"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddonsIdentifyRequest": {
      "type": "object",
      "properties": {
        "plugin": {
          "$ref": "#/definitions/v1briefPluginInfo"
        },
        "implementedAddons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1implementedAddons"
          }
        }
      },
      "description": "*\nThe request value of the POST /v1/addons/identify,\nused when the plugin in the registration process implements\nthe extension point of the registered plugin."
    },
    "v1AddonsIdentifyResponse": {
      "type": "object",
      "properties": {
        "res": {
          "$ref": "#/definitions/v1result"
        }
      },
      "description": "*\nThe response value of the POST /v1/addons/identify,\nused when the plugin in the registration process implements\nthe extension point of the registered plugin."
    },
    "v1IdentifyResponse": {
      "type": "object",
      "properties": {
        "res": {
          "$ref": "#/definitions/v1result"
        },
        "pluginID": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "tkeelVersion": {
          "type": "string"
        },
        "addonsPoint": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1addonsPoint"
          }
        },
        "implementedPlugin": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1implementedPlugin"
          }
        }
      },
      "description": "*\nThe response value of the GET /v1/identify,\nused when the plugin registered."
    },
    "v1StatusResponse": {
      "type": "object",
      "properties": {
        "res": {
          "$ref": "#/definitions/v1result"
        },
        "status": {
          "$ref": "#/definitions/v1pluginStatus"
        }
      },
      "description": "*\nThe request value of the GET /v1/Status.\nused when the tkeel checks the status of plugins regularly."
    },
    "v1TenantBindRequst": {
      "type": "object",
      "properties": {
        "tenantID": {
          "type": "string"
        },
        "extra": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "*\nThe request value of the POST /v1/tenant/bind,\nused when the tenant administrator enables the plugin."
    },
    "v1TenantBindResponse": {
      "type": "object",
      "properties": {
        "res": {
          "$ref": "#/definitions/v1result"
        }
      },
      "description": "*\nThe response value of the POST /v1/tenant/bind,\nused when the tenant administrator enables the plugin."
    },
    "v1TenantUnbindRequst": {
      "type": "object",
      "properties": {
        "tenantID": {
          "type": "string"
        },
        "extra": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "*\nThe request value of the POST /v1/tenant/unbind,\nused when the tenant administrator disables the plugin."
    },
    "v1TenantUnbindResponse": {
      "type": "object",
      "properties": {
        "res": {
          "$ref": "#/definitions/v1result"
        }
      },
      "description": "*\nThe response value of the POST /v1/tenant/unbind,\nused when the tenant administrator disables the plugin."
    },
    "v1addonsPoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "desc": {
          "type": "string"
        }
      },
      "description": "*\nmessage plugin declares extension point."
    },
    "v1briefPluginInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "description": "*\nmessage brief plugin information."
    },
    "v1implementedAddons": {
      "type": "object",
      "properties": {
        "addonsPoint": {
          "type": "string"
        },
        "implementedEndpoint": {
          "type": "string"
        }
      },
      "description": "*\nmessage plugin declares implemented other plugin extension point."
    },
    "v1implementedPlugin": {
      "type": "object",
      "properties": {
        "plugin": {
          "$ref": "#/definitions/v1briefPluginInfo"
        },
        "addons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1implementedAddons"
          }
        }
      },
      "description": "*\nmessage plugin implemented other plugin."
    },
    "v1pluginStatus": {
      "type": "string",
      "enum": [
        "error",
        "starting",
        "runing",
        "stopping",
        "stopped"
      ],
      "default": "error",
      "description": "*\nplugin state enum."
    },
    "v1result": {
      "type": "object",
      "properties": {
        "ret": {
          "$ref": "#/definitions/v1retcode"
        },
        "msg": {
          "type": "string"
        }
      },
      "description": "*\nmessage result."
    },
    "v1retcode": {
      "type": "string",
      "enum": [
        "ok",
        "badRequest",
        "internalError"
      ],
      "default": "ok",
      "description": "*\nerror code enum."
    }
  }
}
