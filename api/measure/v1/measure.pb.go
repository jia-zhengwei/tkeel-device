// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/measure/v1/measure.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMeasureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measure *MeasureEntity `protobuf:"bytes,1,opt,name=measure,proto3" json:"measure,omitempty"`
}

func (x *CreateMeasureRequest) Reset() {
	*x = CreateMeasureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_measure_v1_measure_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMeasureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMeasureRequest) ProtoMessage() {}

func (x *CreateMeasureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_measure_v1_measure_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMeasureRequest.ProtoReflect.Descriptor instead.
func (*CreateMeasureRequest) Descriptor() ([]byte, []int) {
	return file_api_measure_v1_measure_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMeasureRequest) GetMeasure() *MeasureEntity {
	if x != nil {
		return x.Measure
	}
	return nil
}

type UpdateMeasureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Measure *MeasureEntity `protobuf:"bytes,2,opt,name=measure,proto3" json:"measure,omitempty"`
}

func (x *UpdateMeasureRequest) Reset() {
	*x = UpdateMeasureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_measure_v1_measure_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMeasureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMeasureRequest) ProtoMessage() {}

func (x *UpdateMeasureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_measure_v1_measure_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMeasureRequest.ProtoReflect.Descriptor instead.
func (*UpdateMeasureRequest) Descriptor() ([]byte, []int) {
	return file_api_measure_v1_measure_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateMeasureRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMeasureRequest) GetMeasure() *MeasureEntity {
	if x != nil {
		return x.Measure
	}
	return nil
}

type DeleteMeasureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMeasureRequest) Reset() {
	*x = DeleteMeasureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_measure_v1_measure_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMeasureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMeasureRequest) ProtoMessage() {}

func (x *DeleteMeasureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_measure_v1_measure_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMeasureRequest.ProtoReflect.Descriptor instead.
func (*DeleteMeasureRequest) Descriptor() ([]byte, []int) {
	return file_api_measure_v1_measure_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteMeasureRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMeasureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMeasureRequest) Reset() {
	*x = GetMeasureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_measure_v1_measure_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeasureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasureRequest) ProtoMessage() {}

func (x *GetMeasureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_measure_v1_measure_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasureRequest.ProtoReflect.Descriptor instead.
func (*GetMeasureRequest) Descriptor() ([]byte, []int) {
	return file_api_measure_v1_measure_proto_rawDescGZIP(), []int{3}
}

func (x *GetMeasureRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListMeasureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMeasureRequest) Reset() {
	*x = ListMeasureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_measure_v1_measure_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMeasureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeasureRequest) ProtoMessage() {}

func (x *ListMeasureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_measure_v1_measure_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeasureRequest.ProtoReflect.Descriptor instead.
func (*ListMeasureRequest) Descriptor() ([]byte, []int) {
	return file_api_measure_v1_measure_proto_rawDescGZIP(), []int{4}
}

//------------------------------------------------------------------------------
// Basic data types
//------------------------------------------------------------------------------
type MeasureEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc        string            `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Device      string            `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	DataType    string            `protobuf:"bytes,4,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Precision   float32           `protobuf:"fixed32,5,opt,name=precision,proto3" json:"precision,omitempty"`
	Unit        string            `protobuf:"bytes,6,opt,name=unit,proto3" json:"unit,omitempty"`
	MeasureType string            `protobuf:"bytes,7,opt,name=measure_type,json=measureType,proto3" json:"measure_type,omitempty"`
	Ext         map[string]string `protobuf:"bytes,8,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XId         string            `protobuf:"bytes,9,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	XCreatedAt  uint64            `protobuf:"varint,10,opt,name=_createdAt,json=CreatedAt,proto3" json:"_createdAt,omitempty"`
	XUpdatedAt  uint64            `protobuf:"varint,11,opt,name=_updatedAt,json=UpdatedAt,proto3" json:"_updatedAt,omitempty"`
}

func (x *MeasureEntity) Reset() {
	*x = MeasureEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_measure_v1_measure_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureEntity) ProtoMessage() {}

func (x *MeasureEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_measure_v1_measure_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureEntity.ProtoReflect.Descriptor instead.
func (*MeasureEntity) Descriptor() ([]byte, []int) {
	return file_api_measure_v1_measure_proto_rawDescGZIP(), []int{5}
}

func (x *MeasureEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MeasureEntity) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MeasureEntity) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *MeasureEntity) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *MeasureEntity) GetPrecision() float32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *MeasureEntity) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *MeasureEntity) GetMeasureType() string {
	if x != nil {
		return x.MeasureType
	}
	return ""
}

func (x *MeasureEntity) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

func (x *MeasureEntity) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *MeasureEntity) GetXCreatedAt() uint64 {
	if x != nil {
		return x.XCreatedAt
	}
	return 0
}

func (x *MeasureEntity) GetXUpdatedAt() uint64 {
	if x != nil {
		return x.XUpdatedAt
	}
	return 0
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_measure_v1_measure_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_measure_v1_measure_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_api_measure_v1_measure_proto_rawDescGZIP(), []int{6}
}

func (x *CommonResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_api_measure_v1_measure_proto protoreflect.FileDescriptor

var file_api_measure_v1_measure_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x5f, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x26,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x82, 0x03, 0x0a, 0x0d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x45, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12,
	0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x36,
	0x0a, 0x08, 0x45, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x28, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0xad, 0x04, 0x0a, 0x07, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x70, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x08, 0x2f, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x3a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x75,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x1a, 0x0d, 0x2f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x07, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x6c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x66, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x63, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x42, 0x46, 0x0a, 0x0e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x74, 0x6b, 0x65, 0x65, 0x6c, 0x2d,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_measure_v1_measure_proto_rawDescOnce sync.Once
	file_api_measure_v1_measure_proto_rawDescData = file_api_measure_v1_measure_proto_rawDesc
)

func file_api_measure_v1_measure_proto_rawDescGZIP() []byte {
	file_api_measure_v1_measure_proto_rawDescOnce.Do(func() {
		file_api_measure_v1_measure_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_measure_v1_measure_proto_rawDescData)
	})
	return file_api_measure_v1_measure_proto_rawDescData
}

var file_api_measure_v1_measure_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_measure_v1_measure_proto_goTypes = []interface{}{
	(*CreateMeasureRequest)(nil), // 0: api.measure.v1.CreateMeasureRequest
	(*UpdateMeasureRequest)(nil), // 1: api.measure.v1.UpdateMeasureRequest
	(*DeleteMeasureRequest)(nil), // 2: api.measure.v1.DeleteMeasureRequest
	(*GetMeasureRequest)(nil),    // 3: api.measure.v1.GetMeasureRequest
	(*ListMeasureRequest)(nil),   // 4: api.measure.v1.ListMeasureRequest
	(*MeasureEntity)(nil),        // 5: api.measure.v1.MeasureEntity
	(*CommonResponse)(nil),       // 6: api.measure.v1.CommonResponse
	nil,                          // 7: api.measure.v1.MeasureEntity.ExtEntry
}
var file_api_measure_v1_measure_proto_depIdxs = []int32{
	5, // 0: api.measure.v1.CreateMeasureRequest.measure:type_name -> api.measure.v1.MeasureEntity
	5, // 1: api.measure.v1.UpdateMeasureRequest.measure:type_name -> api.measure.v1.MeasureEntity
	7, // 2: api.measure.v1.MeasureEntity.ext:type_name -> api.measure.v1.MeasureEntity.ExtEntry
	0, // 3: api.measure.v1.Measure.CreateMeasure:input_type -> api.measure.v1.CreateMeasureRequest
	1, // 4: api.measure.v1.Measure.UpdateMeasure:input_type -> api.measure.v1.UpdateMeasureRequest
	2, // 5: api.measure.v1.Measure.DeleteMeasure:input_type -> api.measure.v1.DeleteMeasureRequest
	3, // 6: api.measure.v1.Measure.GetMeasure:input_type -> api.measure.v1.GetMeasureRequest
	4, // 7: api.measure.v1.Measure.ListMeasure:input_type -> api.measure.v1.ListMeasureRequest
	6, // 8: api.measure.v1.Measure.CreateMeasure:output_type -> api.measure.v1.CommonResponse
	6, // 9: api.measure.v1.Measure.UpdateMeasure:output_type -> api.measure.v1.CommonResponse
	6, // 10: api.measure.v1.Measure.DeleteMeasure:output_type -> api.measure.v1.CommonResponse
	6, // 11: api.measure.v1.Measure.GetMeasure:output_type -> api.measure.v1.CommonResponse
	6, // 12: api.measure.v1.Measure.ListMeasure:output_type -> api.measure.v1.CommonResponse
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_measure_v1_measure_proto_init() }
func file_api_measure_v1_measure_proto_init() {
	if File_api_measure_v1_measure_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_measure_v1_measure_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMeasureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_measure_v1_measure_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMeasureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_measure_v1_measure_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMeasureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_measure_v1_measure_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeasureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_measure_v1_measure_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMeasureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_measure_v1_measure_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_measure_v1_measure_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_measure_v1_measure_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_measure_v1_measure_proto_goTypes,
		DependencyIndexes: file_api_measure_v1_measure_proto_depIdxs,
		MessageInfos:      file_api_measure_v1_measure_proto_msgTypes,
	}.Build()
	File_api_measure_v1_measure_proto = out.File
	file_api_measure_v1_measure_proto_rawDesc = nil
	file_api_measure_v1_measure_proto_goTypes = nil
	file_api_measure_v1_measure_proto_depIdxs = nil
}
